from aiogram import Router
from aiogram.filters import CommandStart
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from keyboards.all_text_keyboards import get_main_keyboard
from keyboards.all_inline_keyboards import get_continue_create_kb
from create_bot import logger
from database.core import db
from database.models import User
from handlers.current_plan_handler import SetTimeReminder


start_router = Router()


@start_router.message(CommandStart())
async def cmd_start(message: Message, state: FSMContext):

    db_repo = await db.get_repository()  

    # –°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø

    cur_state = await state.get_state()
    if cur_state is not None and cur_state != SetTimeReminder.set_reminder_time:
        await message.answer("–í—ã —É–∂–µ –Ω–∞—á–∞–ª–∏ –∑–∞–ø–æ–ª–Ω—è—Ç—å —Å–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω, " 
                             "—Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∏–º —Å —Ç–æ–≥–æ –º–µ—Å—Ç–∞, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∏—Å—å?",
                             reply_markup=get_continue_create_kb())
        return
    
    await message.answer("–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç-–∫–æ–Ω–¥–∏—Ç–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –≤ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —Ç–≤–æ–∏—Ö —Ü–µ–ª–µ–π!\n\n"
                         "–î–∞–≤–∞–π —Ä–∞—Å—Å–∫–∞–∂—É —Ç–µ–±–µ –æ –∫–Ω–æ–ø–∫–∞—Ö, —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä—ã—Ö –º—ã —Å —Ç–æ–±–æ–π –º–æ–∂–µ–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å:\n\n"
                         "üìã –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø–ª–∞–Ω - —ç—Ç–∞ –∫–Ω–æ–ø–∫–∞ –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø–ª–∞–Ω, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É —Ç—ã —Å–º–æ–∂–µ—à—å –¥–≤–∏–≥–∞—Ç—å—Å—è –∫ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—é —Å–≤–æ–µ–π —Ü–µ–ª–∏\n\n"
                         "‚ùó –°—Ç–∞—Ç—É—Å —Ç–µ–∫—É—â–µ–≥–æ –ø–ª–∞–Ω–∞ - —Å –ø–æ–º–æ—â—å—é —ç—Ç–æ–π –∫–Ω–æ–ø–∫–∏ —Ç—ã –º–æ–∂–µ—à—å –æ—Ç–ª–µ–∂–∏–≤–∞—Ç—å —Ç–µ–∫—É—â–∏–π –ø–ª–∞–Ω (–∑–∞–¥–∞—á—É, –∫–æ—Ç–æ—Ä—É—é —Ç–µ–±–µ —Å–µ–π—á–∞—Å –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å, –¥–µ–¥–ª–∞–π–Ω –ø–æ –Ω–µ–π, –∞ —Ç–∞–∫–∂–µ –Ω–æ–º–µ—Ä —ç—Ç–∞–ø–∞)"
                         "üéØ –¢–µ–∫—É—â–∞—è —Ü–µ–ª—å - —ç—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–∞–ø–æ–º–Ω–∏—Ç —Ç–µ–±–µ, —Ä–∞–¥–∏ —á–µ–≥–æ —Ç—ã —Ç–∞–∫ —Å—Ç–∞—Ä–∞–µ—à—å—Å—è!\n\n"
                         "üóíÔ∏è –¢–µ–∫—É—â–∏–π –ø–ª–∞–Ω - –∑–¥–µ—Å—å —Ç—ã —Å–º–æ–∂–µ—à—å —É–≤–∏–¥–µ—Ç—å –ø–ª–∞–Ω —Ü–µ–ª–∏–∫–æ–º.\n\n"
                         "üïõ –ó–∞–¥–∞—Ç—å —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–ª–∫–∞–º - –∫–∞–∂–¥—ã–π —Ä–∞–∑ –≤ –¥–µ–Ω—å –¥–µ–¥–ª–∞–π–Ω–∞ —Ç–µ–±–µ –±—É–¥–µ—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–ª–∫–∞, —Å –ø–æ–º–æ—â—å—é —ç—Ç–æ–π –∫–Ω–æ–ø–∫–∏ —Ç—ã —Å–º–æ–∂–µ—à—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∏—Ö –≤—Ä–µ–º—è.\n\n"
                         "ü§´ –û—á–∏—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ - –Ω–∞–∂–∞–≤ —Å—é–¥–∞ —Ç—ã –æ—á–∏—Å—Ç–∏—à—å –¥–∞–Ω–Ω—ã–µ –æ —Ç–µ–∫—É—â–µ–º –ø–ª–∞–Ω–µ –∏ —Ç–≤–æ–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å–µ –≤ –Ω–µ–º, –∏—Å–ø–æ–ª—å–∑—É–π —Å –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç—å—é!\n\n"
                         "üÜò –û–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!) - –≤ —Å–ª—É—á–∞–µ –Ω–µ–ø–æ–ª–∞–¥–æ–∫ —è –º–æ–≥—É –ø–µ—Ä–µ–¥–∞—Ç—å —Ç–≤–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É (–±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –æ–¥–Ω–æ –ø–∏—Å—å–º–æ –∫–∞–∂–¥—ã–π —á–∞—Å –≤ —Ü–µ–ª—è—Ö –±–æ—Ä—å–±—ã —Å–æ —Å–ø–∞–º–æ–º)", 
                         reply_markup=get_main_keyboard(message.from_user.id))  
    
    new_user = User(
        id=message.from_user.id,
        goal="",
        plan=None,
        messages=None,
        access=False
    )

    try:
        created = await db_repo.create_user(new_user)
        logger.info(f"–ü–æ–ø—ã—Ç–∫–∞ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å id: {new_user.id}")
        if created:
            logger.info(f"–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω: {message.from_user.id}")
        else:
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {message.from_user.id}")
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")
        return

    